<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc.warehouse.mapper.StoreMapper">

    <resultMap id="BaseResultMap" type="com.abc.warehouse.pojo.Store">
        <id property="storeId" column="store_id" jdbcType="BIGINT"/>
        <result property="storeNo" column="store_no" jdbcType="BIGINT"/>
        <result property="houseName" column="house_name" jdbcType="VARCHAR"/>
        <result property="storeTime" column="store_time" jdbcType="DATE"/>
        <result property="materialId" column="material_id" jdbcType="BIGINT"/>
        <result property="storeCount" column="store_count" jdbcType="INTEGER"/>
        <result property="remainCount" column="remain_count" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="notes" column="notes" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        store_id,store_no,house_name,
        store_time,material_id,store_count,
        remain_count,user_id,notes
    </sql>

    <resultMap id="storeResult" type="com.abc.warehouse.pojo.Store">
        <id column="store_id" property="storeId"/>
        <result column="store_no" property="storeNo"/>
        <result column="house_name" property="houseName"/>
        <result column="store_time" property="storeTime"/>
        <result column="material_id" property="materialId"/>
        <result column="store_count" property="storeCount"/>
        <result column="remain_count" property="remainCount"/>
        <result column="user_id" property="userId"/>
        <result column="notes" property="notes"/>
        <association property="material" javaType="com.abc.warehouse.pojo.Material">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
            <result column="house_name" property="houseName"/>
            <result column="type" property="type"/>
            <result column="unit" property="unit"/>
            <result column="stock" property="stock"/>
            <result column="comments" property="comments"/>
            <result column="create_time" property="createTime"/>
        </association>
    </resultMap>

    <select id="selectByCondition" resultMap="storeResult">
        select * from store_208201302 s right join material_208201302 m on s.material_id = m.id
        where 1 = 1
        <if test="storeNo != null and storeNo != ''">
            and store_no = #{storeNo}
        </if>
        <if test="houseName != null and houseName != ''">
            and house_name like '%${houseName}%'
        </if>
        <if test="startTime != null and endTime != null">
            and (store_time BETWEEN #{startTime} AND #{endTime})
        </if>
        <if test="materialId != null and materialId != ''">
            and material_id = #{materialId}
        </if>
        <if test="userId != null and userId != ''">
            AND user_id = #{userId}
        </if>
        <if test="notes != null and notes != ''">
            and notes like '%${notes}%'
        </if>
        ORDER BY store_time DESC, store_no DESC
        limit #{pageSize} offset ${(pageNum - 1) * pageSize}
    </select>

    <select id="totalNum" resultType="Long">
        select count(*) from store_208201302 where 1 = 1
        <if test="storeNo != null and storeNo != ''">
            and store_no = #{storeNo}
        </if>
        <if test="houseName != null and houseName != ''">
            and house_name like '%${houseName}%'
        </if>
        <if test="startTime != null and endTime != null">
            and (store_time BETWEEN #{startTime} AND #{endTime})
        </if>
        <if test="materialId != null and materialId != ''">
            and material_id = #{materialId}
        </if>
        <if test="userId != null and userId != ''">
            AND user_id = #{userId}
        </if>
        <if test="notes != null and notes != ''">
            and notes like '%${notes}%'
        </if>
    </select>

    <select id="searchAll" resultMap="storeResult">
        select *
        from store_208201302 s
                 right join material_208201302 m on s.material_id = m.id
        where IFNULL(s.store_time, '') != ''
        order by s.store_time desc, s.store_no desc
            limit #{pageSize} offset ${(pageNum - 1) * pageSize}
    </select>

    <select id="selectStoreByDate" resultMap="storeResult">
        select s.*, m.*
        from store_208201302 s
                 right join material_208201302 m on s.material_id = m.id
        where (s.store_time between #{startDate} and #{endDate})
        order by s.store_no asc
    </select>

    <select id="selectStoreByYear" resultType="com.abc.warehouse.pojo.Store">
        select *
        from store_208201302
        where material_id = #{materialId} and house_name = #{houseName}
          and store_time between #{startYear} and #{endYear}
        order by store_time asc
    </select>

    <select id="selectStoreByYearAndMaterialName" resultType="com.abc.warehouse.pojo.Store">
        SELECT *
        FROM store_208201302 s
        INNER JOIN material_208201302 m ON s.material_id = m.id
        WHERE m.name = #{materialName}
        <if test="startYear != null and endYear != null">
            AND s.store_time BETWEEN #{startYear} AND #{endYear}
        </if>
    </select>

    <select id="selectStoreByDate" resultMap="storeResult">
        select s.*, m.*
        from store_208201302 s
                 right join material_208201302 m on s.material_id = m.id
        where (s.store_time between #{startDate} and #{endDate})
        order by s.store_no asc
    </select>

    <select id="findCountByNameBetweenDates" resultType="java.util.Map">
        SELECT
            m.name AS materialName,
            CAST(SUM(s.store_count) AS SIGNED) AS totalstoreCount
        FROM
            material_208201302 m
                INNER JOIN store_208201302 s ON m.id = s.material_id
        WHERE
            s.store_time BETWEEN #{startTime} AND #{endTime}
        GROUP BY
            m.name
        ORDER BY totalstoreCount ASC
    </select>
</mapper>
